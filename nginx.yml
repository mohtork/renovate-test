---

-

  # Target: where our play will run and options it will run with
  hosts: all
  become: true
  
  vars:
    pcre_version: pcre-8.40
    pcre_tarball_url: "https://ftp.pcre.org/pub/pcre/{{ pcre_version }}.tar.gz"
    pcre_install_dir: "/app/sources/{{ pcre_version }}"
    zlib_version: zlib-1.2.11
    zlib_tarball_url: "https://www.zlib.net/{{ zlib_version }}.tar.gz"
    zlib_install_dir: "/app/sources/{{ zlib_version }}"
    openssl_version: openssl-1.1.0f
    openssl_tarball_url: "https://www.openssl.org/source/{{ openssl_version }}.tar.gz"
    openssl_install_dir: "/app/sources/{{ openssl_version }}"
    nginx_version: nginx-1.12.2 #the latest stable version
    nginx_tarball_url: "http://nginx.org/download/{{ nginx_version }}.tar.gz"
    nginx_install_dir: "/app/sources/{{ nginx_version }}"
    nginx_sbin_path: "/usr/sbin/nginx"
    nginx_module_path: "/usr/lib64/nginx/modules"
    nginx_conf_path: "/etc/nginx/nginx.conf"
    nginx_error_path: "/var/log/nginx/error.log"
    nginx_pid_path: "/var/run/nginx.pid"
    nginx_lock_path: "/var/run/nginx.lock"
    nginx_user: "nginx"
    nginx_group: "nginx"
    nginx_custom_modules: >
      --sbin-path=/usr/sbin/nginx
      --modules-path=/usr/lib64/nginx/modules
      --error-log-path=/var/log/nginx/error.log
      --pid-path=/var/run/nginx.pid
      --lock-path=/var/run/nginx.lock
      --user=nginx
      --group=nginx
      --with-select_module
      --with-poll_module
      --with-file-aio
      --with-http_ssl_module
      --with-http_v2_module
      --with-http_realip_module
      --with-http_addition_module
      --with-http_xslt_module
      --with-http_image_filter_module
      --with-http_geoip_module
      --with-http_sub_module
      --with-http_dav_module
      --with-http_flv_module
      --with-http_mp4_module
      --with-http_gunzip_module
      --with-http_gzip_static_module
      --with-http_auth_request_module
      --with-http_random_index_module
      --with-http_secure_link_module
      --with-http_degradation_module
      --with-http_stub_status_module
      --with-http_perl_module
      --with-mail
      --with-mail_ssl_module
      --with-cpp_test_module
      --with-cpu-opt=CPU
      --with-pcre={{ pcre_install_dir }}
      --with-pcre-jit
      --with-zlib={{ zlib_install_dir }}
      --with-openssl={{ openssl_install_dir }}
                
  tasks:
  - user:
      name: nginx
      state: present
      shell: /sbin/nologin
      createhome: no

  - name: Install Development Tools
    yum:
      name: "@Development tools"
      state: present

  - name: Installing NGINX Dependencies
    yum:
      name: "{{ item }}" 
      update_cache: yes
    with_items:
      - epel-release
      - perl
      - perl-devel
      - perl-ExtUtils-Embed
      - libxslt
      - libxslt-devel
      - libxml2
      - libxml2-devel
      - gd
      - gd-devel
      - GeoIP
      - GeoIP-devel

  - name: Create required dirs if they don't exist
    file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
      mode: 0755
    with_items:
      - /app/sources
      - /etc/nginx 

  - name: Downloading Sources
    get_url:
      url: "{{ item }}"
      dest: "/app/sources"
    with_items:
      - "{{ pcre_tarball_url }}"
      - "{{ zlib_tarball_url }}"
      - "{{ openssl_tarball_url }}"
      - "{{ nginx_tarball_url }}"
    register: files_source

  - name: Unpacking files
    unarchive:
      copy: no
      dest: "/app/sources"
      src:  "{{ item }}"
      owner: root
      group: root
    with_items:
      - "/app/sources/{{ pcre_version }}.tar.gz"
      - "/app/sources/{{ zlib_version }}.tar.gz"
      - "/app/sources/{{ openssl_version }}.tar.gz"
      - "/app/sources/{{ nginx_version }}.tar.gz"
    when: files_source.changed
    register: files_source_unpack

  - name: Configure NGINX source with custom modules
    command: "{{ item }}"
    args:
      chdir: "{{ nginx_install_dir }}"
    with_items:
      - "./configure --sbin-path={{ nginx_sbin_path }} --conf-path={{ nginx_conf_path }} {{ nginx_custom_modules }}"
      - "/usr/bin/make"
      - "/usr/bin/make install"
    when: files_source_unpack|changed
    register: nginx_configure

  - name: Creating NGINX conf file
    template:
      src: "nginx.conf"
      dest: "{{ nginx_conf_path }}"
      owner: root
      group: root
      mode: 0644

  - name: Create a systemd unit file for NGINX
    template:
      src: nginx.service
      dest: /usr/lib/systemd/system/nginx.service
      owner: root
      group: root
      mode: 0644

  - name: Start NGINX
    service:
      name: nginx
      enabled: yes
      state: started
    when: nginx_configure|changed
...
